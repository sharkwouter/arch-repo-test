name: Build the repo
on: push
jobs:
  build:
    name: Publish repo
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Change directory
        run: cd $GITHUB_WORKSPACE
      - name: Pull base image
        run: docker pull archlinux:latest
      - name: Create build image
        run: docker build --no-cache -t builder:latest .
      - name: Build packages
        id: build_packages
        run: docker run --rm -v $(pwd)/output:/build/output builder:latest
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload minigalaxy.db
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/minigalaxy.db
          asset_name: minigalaxy.db
          asset_content_type: application/gzip
      - name: Upload minigalaxy.db.tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/minigalaxy.db.tar.gz
          asset_name: minigalaxy.db.tar.gz
          asset_content_type: application/gzip
      - name: Upload minigalaxy.files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/minigalaxy.files
          asset_name: minigalaxy.files
          asset_content_type: application/gzip
      - name: Upload minigalaxy.files.tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/minigalaxy.files.tar.gz
          asset_name: minigalaxy.files.tar.gz
          asset_content_type: application/gzip

      - name: Upload minigalaxy
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/minigalaxy-1.0.2-1-any.pkg.tar.zst
          asset_name: minigalaxy-1.0.2-1-any.pkg.tar.zst
          asset_content_type: application/x-zstd
